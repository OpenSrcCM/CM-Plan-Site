#!/bin/bash
##################################################################################
# startup.bsh
#
# Written by Andy Wallace 2018/07/18; last updated 2019/06/26
#
# This script automatically sets up a VM enhanced development environment 
# for the targeted repository.
#
# Dependencies:
#  - ssh alias configured in ~/.ssh/config for $sshConfigref
#  - GitHub system with $TargetOrg.
#  - $TargetDIR directory exists.
#  - $TargetRepo workarea directory exists in $TargetDIR.
#  - $BackupWA workarea directory exists in $TargetDIR.
#  - $TargetRepo/deploy/cm-plan-service.bsh script exists after git clone.
#  - $TargetRepo/develop branch exists.
#  - The existence of a ~/.bash_profile set for your workstation with
#      recommendations. Reference app/bin/.bash_profile for details.
#  - A copy of this script in ~/bin/ with execute permissions and configured
#      for your environment. See Script configuration variables section.
#
# Notes:
#  1. This script should not be run if there is an active VM Enhanced workarea.
#     Be sure to run 'vagrant destroy' and remove the associated workarea
#     before running this script again.
#  2. This script assumes 'vagrant destroy' has been run.
#  3. Active website sessions using the same port will cause an execution error.
#  4. This script assumes a $BackupWA exists and removes it.
#  5. This script moves the $TargetRepo directory to the $BackupWA directory.
#  6. Arguments are Major, Minor, and patch to support Semantic Versioning.
#     https://semver.org/
#    6.a These arguments are only used to name the deployment package
#    6.b As a development organization technique I often use them for
#        date, i.e., Major=YYYY, Minor=MM, and patch=DD.
#
##################################################################################

################################################################################
# Script configuration variables
################################################################################
ThisScript="startup.bsh"              # Used in log and response messaging
TargetDir="negit-repos"               # repo workarea directory
BackupWA="cps-hold"                   # Backup workarea directory from previous
                                      # session
sshConfigref="cmguy"                  # defined in ~/.ssh/config
TargetOrg="cmguy"                     # GHE organization 
TargetRepo="CM-Plan-Site"             # GHE organization repo
TargetService="cm-plan-service.bsh"   # Primary deployment script

################################################################################
# Process script arguments
################################################################################
if [ "$#" -eq "0" ]; then echo ""
      echo "Invalid argument set. For help execute " $ThisScript " -h"
      echo ""
      echo "ERROR - No argument supplied."
      exit 1
fi

if [ "$#" -ge "1" ]; then
   echo "`date +%c` Validate $ThisScript arguments ..."
   elif [ "$#" -gt "3" ]; then
      echo ""
      echo "Invalid argument set. For help execute " $ThisScript " -h"
      echo ""
      echo "ERROR - Too many arguments supplied."
      exit 1
   elif [ "$#" -lt "3" ]; then
      echo ""
      echo "Invalid argument set. For help execute " $ThisScript " -h"
      echo ""
      echo "ERROR - Invalid number of arguments supplied."
      exit 1
fi

if [ "$1" == "-h" ]; then
   echo ""
   echo "$ThisScript -h|[ Major minor Issue ]"
   echo ""
   echo "   -h          -> Prints this help text."
   echo ""
   echo "   Major -> Release Major number for this $ThisRepo repo deployment."
   echo ""
   echo "   Minor -> Release Minor number for this $ThisRepo repo deployment."
   echo ""
   echo "   Issue -> GitHub, or CR, issue number for this $ThisRepo repo deployment."
   echo ""
   echo "Note that '.' is not a valid argument character."
   echo "Use spaces to separate Major, Minor, and Issue values."
   exit 1
fi

for i in "$@"; do
   if [[ $i =~ "." ]]; then
      echo ""
      echo "Invalid argument value. For help execute " $ThisScript " -h"
      echo ""
      echo "ERROR - Invalid argument(s) supplied."
      echo ""
      echo "'.' is not a valid argument character."
      exit 1
   else
      Major="$1"
      minor="$2"
      Issue="$3"
   fi
done
# Test -echo arguments
#echo "Major is " $Major
#echo "Minor is " $Minor
#echo "Issue # is " $Issue

################################################################################
# Create VM enhanced development environment
################################################################################
echo "`date +%c` $Targetrepo - prepare $TargetDir directory ..." 2>&1
cd ~/$TargetDir 2>&1
rm -fr $BackupWA 2>&1
mv $TargetRepo $BackupWA
echo "`date +%c` $TargetDir directory ready for git clone." 2>&1
git clone $sshConfigref:$TargetOrg/$TargetRepo
cd $TargetRepo/deploy
git checkout develop
./$TargetService $Major $minor $Issue

echo "`date +%c` VM Enhanced workarea created." 2>&1
echo "execute 'vagrant destroy' and remove workarea before running this script again."
