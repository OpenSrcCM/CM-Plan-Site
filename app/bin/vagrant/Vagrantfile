# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "hashicorp/precise64"
  # config.vm.box_version = "1.1.0"
  # config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  #
  # Reference https://docs.docker.com/install/linux/docker-ce/centos for docker
  # specifics.
  # To install specific versions of Docker CE, list the available versions
  # in the repo, then select and install:
  # yum list docker-ce --showduplicates | sort -r
  # 
  #  NOTES:
  #    1. Use "yum list docker-ce --showduplicates | sort -r" to identify
  #       stable versions.
  #    2. "yum install docker-ce" will install the latest version of Docker CE.
  #    3. "yum install docker-ce-18.06.1.ce-3.el7" for current stable
  #       as of 10/10/2018.
  #        
  #  A. Start docker and run hello-world to verify it's functioning
  #  B. Add vagrant user to docker group
  #  C. execute all in Recap and cheat sheet section of Docker
  #     get started at https://docs.docker.com/get-started/
  #  D. Spiking/Testing .... Get Started, Part 2: Containers
  #
  config.vm.box = "bento/centos-7.5"
  config.vm.box_version = "201806.08.0"
  config.vm.provision "shell", inline: <<-SHELL
     yum install -y deltarpm
     yum install -y git
     yum install -y httpd
     yum -y update
     yum remove docker \
                docker-client \
                docker-client-latest \
		docker-common \
		docker-latest \
		docker-latest-logrotate \
                docker-logrotate \
                docker-selinux \
                docker-engine-selinux \
                docker-engine
     yum install -y yum-utils \
     device-mapper-persistent-data \
     lvm2
     yum-config-manager \
         --add-repo \
         https://download.docker.com/linux/centos/docker-ce.repo
     yum-config-manager --enable docker-ce-test
     yum-config-manager --enable docker-ce-edge
     yum install docker-ce -y
     systemctl start docker
     docker run hello-world
     usermod -aG docker vagrant
  SHELL
  config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.network :forwarded_port, guest: 80, host: 1234
end
